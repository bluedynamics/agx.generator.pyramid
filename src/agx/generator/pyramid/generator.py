# -*- coding: utf-8 -*-
from agx.generator.pyegg.utils import (
    class_base_name,
    implicit_dotted_path,
)
from agx.core.util import (
    read_target_node,
    dotted_path,
)
from agx.core.interfaces import IScope
from agx.core import (
    handler,
    Scope,
    registerScope,
    token,
)
from node.ext.uml.interfaces import (
    IOperation,
    IClass,
    IPackage,
    IInterface,
    IInterfaceRealization,
    IDependency,
    IProperty,
    IAssociation,
)

@handler('generate_configuration', 'uml2fs', 'semanticsgenerator',
         'pyramid_configuration')
def generate_configuration(self, source, target):
    raise NotImplementedError("stub generated by AGX.")

@handler('handle_setup', 'uml2fs', 'semanticsgenerator', 'pyramid_configuration')
def handle_setup(self, source, target):
    raise NotImplementedError("stub generated by AGX.")

@handler('generate_ini_files', 'uml2fs', 'semanticsgenerator',
         'pyramid_configuration')
def generate_ini_files(self, source, target):
    raise NotImplementedError("stub generated by AGX.")

@handler('generate_static_view', 'uml2fs', 'hierarchygenerator',
         'pyramid_static_view')
def generate_static_view(self, source, target):
    raise NotImplementedError("stub generated by AGX.")

@handler('generate_docs', 'uml2fs', 'semanticsgenerator',
         'pyramid_configuration')
def generate_docs(self, source, target):
    raise NotImplementedError("stub generated by AGX.")

@handler('generate_view', 'uml2fs', 'hierarchygenerator', 'pyramid_view')
def generate_view(self, source, target):
    raise NotImplementedError("stub generated by AGX.")

@handler('generate_buildout', 'uml2fs', 'semanticsgenerator', 'pyramid_buildout')
def generate_buildout(self, source, target):
    raise NotImplementedError("stub generated by AGX.")